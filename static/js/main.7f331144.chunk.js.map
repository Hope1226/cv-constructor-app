{"version":3,"sources":["components/PersonalInfo.js","components/Education.js","components/Experiance.js","App.js","reportWebVitals.js","index.js"],"names":["Personal","props","this","firstName","lastName","ocupation","birthday","email","className","Component","Education","institutionName","studyField","degree","graduation","Experiance","list","map","element","organization","position","start","end","duties","uniqid","App","state","birthDate","personalFormOpen","submitted","graduationDate","educationFormOpen","eduInfoSubmitted","poition","experianceList","experianceFormOpen","experianceSubmitted","openTheForm","setState","openEduForm","openExForm","handleTheInput","e","value","target","id","submitEx","preventDefault","submitInfo","submitEduForm","onClick","disabled","type","onChange","placeholder","htmlFor","name","placeholde","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f331144.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './stylesheets/personal.css';\n\nclass Personal extends Component {\n  constructor(props){\n    super(props);\n  }\n  render(){\n    const { firstName, lastName, ocupation, birthday, email } = this.props;\n\n    return (\n      <div className=\"personalInfo-inner\">\n        <h2><b>First Name:</b> {firstName}</h2>\n        <h2><b>Last Name:</b> {lastName}</h2>\n        <p><b>Occupation:</b> {ocupation}</p>\n        <p><b>Date of Birth:</b> {birthday}</p>\n        <p><b>Email:</b> {email}</p>\n      </div>\n    );\n  }\n}\n\nexport default Personal;","import React, { Component } from \"react\";\nimport './stylesheets/education.css';\n\nclass Education extends Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const {institutionName, studyField, degree, graduation} = this.props;\n\n    return(\n      <div className=\"education-info-inner\">\n        <h2><b>Institution Name:</b> {institutionName}</h2>\n        <p><b>Field of Study:</b> {studyField}</p>\n        <p><b>The degree obtained:</b> {degree}</p>\n        <p><b>Graduation year:</b> {graduation}</p>\n      </div>\n    );\n  }\n}\n\nexport default Education;","import React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\nimport './stylesheets/ex.css';\n\nclass Experiance extends Component {\n  constructor(props){\n    super(props)\n  }\n\n  render(){\n    const {list} = this.props;\n\n    return (\n      <div className=\"experianceCont\">\n        {list.map(element => {\n          return(\n         <div className=\"experiance-inner\" key= {uniqid()}>\n           <h2><b>Organization name:</b> {element.organization}</h2>\n           <p><b>Position hold:</b> {element.position}</p>\n           <p><b>Years of worked:</b> form {element.start} to {element.end}</p>\n           <p><b>Main achievements:</b> {element.duties}</p>\n         </div>\n          );\n        })}\n      </div>\n    );\n  }\n};\n\nexport default Experiance;\n","import './App.css';\nimport React, { Component } from 'react';\nimport Personal from './components/PersonalInfo';\nimport Education from './components/Education';\nimport Experiance from './components/Experiance';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n      this.state = {\n        firstName: \"\",\n        lastName: \"\",\n        birthDate: \"\",\n        ocupation: \"\",\n        email: \"\",\n        personalFormOpen: false,\n        submitted: false,\n        institutionName: \"\",\n        studyField: \"\",\n        graduationDate: \"\",\n        degree: \"\",\n        educationFormOpen: false,\n        eduInfoSubmitted: false,\n        organization: \"\",\n        poition: \"\",\n        start: \"\",\n        end: \"\",\n        duties: \"\",\n        experianceList: [],\n        experianceFormOpen: false,\n        experianceSubmitted: false,\n      };\n\n      this.openTheForm = () => {\n        this.setState({\n          personalFormOpen: true\n        })\n      };\n\n      this.openEduForm = () => {\n        this.setState({\n          educationFormOpen: true\n        })\n      };\n\n      this.openExForm = () => {\n        this.setState({\n          experianceFormOpen: true\n        })\n      };\n\n\n      this.handleTheInput = (e) => {\n        const value = e.target.value;\n        this.setState({\n          [e.target.id]: value\n        });\n      }\n\n      this.submitEx = (e) => {\n        e.preventDefault();\n        this.setState({\n          experianceList: [ ...this.state.experianceList, {\n            organization: this.state.organization,\n            position: this.state.poition,\n            start: this.state.start,\n            end: this.state.end,\n            duties: this.state.duties\n          }\n         ],\n         experianceFormOpen: false,\n         experianceSubmitted: true,\n        }\n       );\n      };\n\n      this.submitInfo = (e) => { \n        e.preventDefault();\n        this.setState({\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          ocupation: this.state.ocupation,\n          email: this.state.email,\n          personalFormOpen: false,\n          submitted: true,\n        })\n      }\n\n      this.submitEduForm = (e) => {\n        e.preventDefault();\n        this.setState({\n          institutionName: this.state.institutionName,\n          studyField: this.state.studyField,\n          graduationDate: this.state.graduationDate,\n          degree: this.state.degree,\n          educationFormOpen: false,\n          eduInfoSubmitted: true\n        })\n      }\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"personalInfo\">\n          <header>\n            <h1>Personal information</h1>\n            <button onClick={this.openTheForm} disabled={this.state.personalFormOpen}>{this.state.submitted ? 'Edit' : 'Add'}</button>\n          </header>\n          <form className={this.state.personalFormOpen ? \"formOpen\" : \"\"}>\n            <fieldset className=\"info\">\n              <input type=\"text\"  id=\"firstName\" onChange={this.handleTheInput}  placeholder=\"First Name\"/>\n              <input type=\"text\"  id=\"lastName\" onChange={this.handleTheInput} placeholder=\"last Name\"/>\n              <label htmlFor=\"birthDate\">Date of your birthdat</label>\n              <input type=\"date\" onChange={this.handleTheInput} id=\"birthDate\" />\n              <input type=\"text\" onChange={this.handleTheInput} id=\"ocupation\" placeholder=\"Ocupation\"/>\n              <input type=\"email\" onChange={this.handleTheInput} id=\"email\" placeholder=\"Email address\"/>\n            </fieldset>\n            <fieldset className=\"action\">\n              <button type=\"submit\" onClick={this.submitInfo}>Submit</button>\n              <button type=\"button\" onClick={()=>{this.setState({personalFormOpen: false})}}>Cancel</button>\n            </fieldset>\n          </form>\n          {this.state.submitted ? \n          <Personal \n            firstName={this.state.firstName} \n            lastName={this.state.lastName} \n            ocupation={this.state.ocupation} \n            birthday={this.state.birthDate}\n            email={this.state.email}\n            /> : null}\n        </div>\n        <div className=\"personalInfo education\">\n          <header>\n          <h1>Education</h1>\n            <button onClick={this.openEduForm}>{this.state.eduInfoSubmitted ? \"Edit\" : \"Add\"}</button>\n          </header>\n          <form className={`eduFrom ${this.state.educationFormOpen ? \"formOpen\" : \" \"}`}>\n            <fieldset className=\"info ed-info\">\n              <input type=\"text\" onChange={this.handleTheInput} id=\"institutionName\" placeholder=\"Enter the institution name\"/>\n              <input type=\"text\" onChange={this.handleTheInput} id=\"studyField\" placeholder=\"Field of study\"/>\n              <label htmlFor=\"degree\">The degree you obtained</label>\n              <select onChange={this.handleTheInput} name=\"edu-degree\" id=\"degree\">\n                <option value=\"PHD\">Ph.D</option>\n                <option value=\"MBA\">MBA</option>\n                <option value=\"bachelor\">Bachelor</option>\n                <option value=\"other\">Other</option>\n              </select>\n              {this.state.degree === \"other\" ?\n              <input onChange={this.handleTheInput} type=\"text\" id=\"intDegree\" placeholde=\"Enter the degree\" /> : null}\n              <label htmlFor=\"graduationDate\">Year of Graduation</label>\n              <input onChange={this.handleTheInput} type=\"date\" id=\"graduationDate\"/>\n            </fieldset>\n            <fieldset className=\"action\">\n              <button type=\"submit\" onClick={this.submitEduForm}>Submit</button>\n              <button type=\"button\" onClick={()=>{this.setState({educationFormOpen: false})}}>Cancel</button>\n            </fieldset>\n          </form>\n          {this.state.eduInfoSubmitted ?\n          <Education\n            institutionName={this.state.institutionName}\n            studyField={this.state.studyField}\n            degree={this.state.degree}\n            graduation={this.state.graduationDate}\n          /> : null}\n        </div>\n        <div className=\"personalInfo experiance\">\n          <header>\n          <h1>Professional Experience</h1>\n            <button onClick={this.openExForm}>{this.state.experianceSubmitted ? \"Add more\" : \"Add\"}</button>\n          </header>\n          <form className={`eduFrom ${this.state.experianceFormOpen ? \"formOpen\" : \" \"}`}>\n            <fieldset className=\"info ex-info\">\n              <input type=\"text\" onChange={this.handleTheInput} id=\"organization\" placeholder=\"Enter the Organization name\"/>\n              <input type=\"text\" onChange={this.handleTheInput} id=\"poition\" placeholder=\"Hold position\"/>\n              <label htmlFor=\"start\">Start</label>\n              <input type=\"date\" onChange={this.handleTheInput} id=\"start\" />\n              <label htmlFor=\"end\">End</label>\n              <input type=\"date\" onChange={this.handleTheInput} id=\"end\" />\n              <textarea name=\"duties\" id=\"duties\" placeholder=\"Please list your achievements\"></textarea>\n            </fieldset>\n            <fieldset className=\"action\">\n              <button type=\"submit\" onClick={this.submitEx}>Add</button>\n              <button type=\"button\" onClick={()=>{this.setState({experianceFormOpen: false})}}>Cancel</button>\n            </fieldset>\n          </form>\n          <div className=\"ex-container\">\n            {this.state.experianceSubmitted ? \n            < Experiance list={this.state.experianceList} /> : null}\n          </div>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}